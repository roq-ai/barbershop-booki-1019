generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model appointment {
  id               String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  customer_id      String   @db.Uuid
  employee_id      String   @db.Uuid
  service_id       String   @db.Uuid
  appointment_time DateTime @db.Timestamp(6)
  status           String   @db.VarChar(255)
  created_at       DateTime @default(now()) @db.Timestamp(6)
  updated_at       DateTime @default(now()) @db.Timestamp(6)
  user             user     @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  employee         employee @relation(fields: [employee_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  service          service  @relation(fields: [service_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model employee {
  id            String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id       String        @db.Uuid
  restaurant_id String        @db.Uuid
  created_at    DateTime      @default(now()) @db.Timestamp(6)
  updated_at    DateTime      @default(now()) @db.Timestamp(6)
  appointment   appointment[]
  restaurant    restaurant    @relation(fields: [restaurant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user          user          @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model restaurant {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description  String?        @db.VarChar(255)
  image        String?        @db.VarChar(255)
  name         String         @db.VarChar(255)
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  user_id      String         @db.Uuid
  tenant_id    String         @db.VarChar(255)
  employee     employee[]
  user         user           @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  service      service[]
  working_hour working_hour[]
}

model service {
  id            String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name          String        @db.VarChar(255)
  price         Int
  restaurant_id String        @db.Uuid
  created_at    DateTime      @default(now()) @db.Timestamp(6)
  updated_at    DateTime      @default(now()) @db.Timestamp(6)
  appointment   appointment[]
  restaurant    restaurant    @relation(fields: [restaurant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String        @unique @db.VarChar(255)
  firstName   String?       @db.VarChar(255)
  lastName    String?       @db.VarChar(255)
  roq_user_id String        @db.VarChar(255)
  tenant_id   String        @db.VarChar(255)
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  appointment appointment[]
  employee    employee[]
  restaurant  restaurant[]
}

model working_hour {
  id            String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  day_of_week   Int
  start_time    DateTime   @db.Time(6)
  end_time      DateTime   @db.Time(6)
  restaurant_id String     @db.Uuid
  created_at    DateTime   @default(now()) @db.Timestamp(6)
  updated_at    DateTime   @default(now()) @db.Timestamp(6)
  restaurant    restaurant @relation(fields: [restaurant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
